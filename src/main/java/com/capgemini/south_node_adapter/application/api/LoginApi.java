/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.63).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.capgemini.south_node_adapter.application.api;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.capgemini.south_node_adapter.domain.model.LoginDetails;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-11-06T08:21:15.532264005Z[GMT]")
@Validated
public interface LoginApi {

	@Operation(summary = "", description = "", tags = { "Auth" })
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "Clear saved authentication to end session") })
	@RequestMapping(value = "/login", method = RequestMethod.DELETE)
	ResponseEntity<Void> loginDelete(
			@NotNull @Parameter(in = ParameterIn.QUERY, description = "", required = true, schema = @Schema()) @Valid @RequestParam(value = "sessionId", required = true) String sessionId);

	@Operation(summary = "", description = "", tags = { "Auth" })
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "Session id that must be used in subsequent requests", content = @Content(mediaType = "application/json", schema = @Schema(implementation = LoginDetails.class))) })
	@RequestMapping(value = "/login", produces = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<LoginDetails> loginPost(
			@NotNull @Parameter(in = ParameterIn.QUERY, description = "", required = true, schema = @Schema()) @Valid @RequestParam(value = "user", required = true) String user,
			@NotNull @Parameter(in = ParameterIn.QUERY, description = "", required = true, schema = @Schema()) @Valid @RequestParam(value = "password", required = true) String password);
}
